C51 COMPILER V9.54   OLED                                                                  07/13/2022 15:06:09 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE OLED
OBJECT MODULE PLACED IN .\Objects\oled.obj
COMPILER INVOKED BY: E:\keil5\C51\BIN\C51.EXE oled.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\oled.l
                    -st) TABS(2) OBJECT(.\Objects\oled.obj)

line level    source

   1          #include "oled.h"
   2          #include "oledfront.h"    //取模的中文库 
   3          /**********************************************
   4          //IIC Start
   5          **********************************************/
   6          void IIC_Start()
   7          {
   8   1       
   9   1        OLED_SCLK_Set() ;
  10   1        OLED_SDIN_Set();
  11   1        OLED_SDIN_Clr();
  12   1        OLED_SCLK_Clr();
  13   1      }
  14           
  15          /**********************************************
  16          //IIC Stop
  17          **********************************************/
  18          void IIC_Stop()
  19          {
  20   1      OLED_SCLK_Set() ;
  21   1      //  OLED_SCLK_Clr();
  22   1        OLED_SDIN_Clr();
  23   1        OLED_SDIN_Set();
  24   1        
  25   1      }
  26           
  27          void IIC_Wait_Ack()
  28          {
  29   1       
  30   1        //GPIOB->CRH &= 0XFFF0FFFF; //设置PB12为上拉输入模式
  31   1        //GPIOB->CRH |= 0x00080000;
  32   1      //  OLED_SDA = 1;
  33   1      //  delay_us(1);
  34   1        //OLED_SCL = 1;
  35   1        //delay_us(50000);
  36   1      /*  while(1)
  37   1        {
  38   1          if(!OLED_SDA)       //判断是否接收到OLED 应答信号
  39   1          {
  40   1            //GPIOB->CRH &= 0XFFF0FFFF; //设置PB12为通用推免输出模式
  41   1            //GPIOB->CRH |= 0x00030000;
  42   1            return;
  43   1          }
  44   1        }
  45   1      */
  46   1        OLED_SCLK_Set() ;
  47   1        OLED_SCLK_Clr();
  48   1      }
  49          /**********************************************
  50          // IIC Write byte
  51          **********************************************/
  52           
  53          void Write_IIC_Byte(unsigned char IIC_Byte)
  54          {
C51 COMPILER V9.54   OLED                                                                  07/13/2022 15:06:09 PAGE 2   

  55   1        unsigned char i;
  56   1        unsigned char m,da;
  57   1        da=IIC_Byte;
  58   1        OLED_SCLK_Clr();
  59   1        for(i=0;i<8;i++)    
  60   1        {
  61   2            m=da;
  62   2          //  OLED_SCLK_Clr();
  63   2          m=m&0x80;
  64   2          if(m==0x80)
  65   2          {OLED_SDIN_Set();}
  66   2          else OLED_SDIN_Clr();
  67   2            da=da<<1;
  68   2          OLED_SCLK_Set();
  69   2          OLED_SCLK_Clr();
  70   2          }
  71   1      }
  72          /**********************************************
  73          // IIC Write Command
  74          **********************************************/
  75          void Write_IIC_Command(unsigned char IIC_Command)
  76          {
  77   1         IIC_Start();
  78   1         Write_IIC_Byte(0x78);            //Slave address,SA0=0
  79   1        IIC_Wait_Ack(); 
  80   1         Write_IIC_Byte(0x00);      //write command
  81   1        IIC_Wait_Ack(); 
  82   1         Write_IIC_Byte(IIC_Command); 
  83   1        IIC_Wait_Ack(); 
  84   1         IIC_Stop();
  85   1      }
  86          /**********************************************
  87          // IIC Write Data
  88          **********************************************/
  89          void Write_IIC_Data(unsigned char IIC_Data)
  90          {
  91   1         IIC_Start();
  92   1         Write_IIC_Byte(0x78);      //D/C#=0; R/W#=0
  93   1        IIC_Wait_Ack(); 
  94   1         Write_IIC_Byte(0x40);      //write data
  95   1        IIC_Wait_Ack(); 
  96   1         Write_IIC_Byte(IIC_Data);
  97   1        IIC_Wait_Ack(); 
  98   1         IIC_Stop();
  99   1      }
 100          void OLED_WR_Byte(unsigned dat,unsigned cmd)
 101          {
 102   1        if(cmd)
 103   1        {
 104   2            Write_IIC_Data(dat);
 105   2        }
 106   1        else 
 107   1          {
 108   2            Write_IIC_Command(dat); 
 109   2          }
 110   1      }
 111           
 112          /********************************************
 113          // fill_Picture
 114          ********************************************/
 115          void fill_picture(unsigned char fill_Data)
 116          {
C51 COMPILER V9.54   OLED                                                                  07/13/2022 15:06:09 PAGE 3   

 117   1        unsigned char m,n;
 118   1        for(m=0;m<8;m++)
 119   1        {
 120   2          OLED_WR_Byte(0xb0+m,0);   //page0-page1
 121   2          OLED_WR_Byte(0x00,0);   //low column start address
 122   2          OLED_WR_Byte(0x10,0);   //high column start address
 123   2          for(n=0;n<128;n++)
 124   2            {
 125   3              OLED_WR_Byte(fill_Data,1);
 126   3            }
 127   2        }
 128   1      }
 129           
 130          //坐标设置
 131           
 132          void OLED_Set_Pos(unsigned char x, unsigned char y) 
 133          {   OLED_WR_Byte(0xb0+y,OLED_CMD);
 134   1        OLED_WR_Byte(((x&0xf0)>>4)|0x10,OLED_CMD);
 135   1        OLED_WR_Byte((x&0x0f),OLED_CMD); 
 136   1      }       
 137          //开启OLED显示    
 138          void OLED_Display_On(void)
 139          {
 140   1        OLED_WR_Byte(0X8D,OLED_CMD);  //SET DCDC命令
 141   1        OLED_WR_Byte(0X14,OLED_CMD);  //DCDC ON
 142   1        OLED_WR_Byte(0XAF,OLED_CMD);  //DISPLAY ON
 143   1      }
 144          //关闭OLED显示     
 145          void OLED_Display_Off(void)
 146          {
 147   1        OLED_WR_Byte(0X8D,OLED_CMD);  //SET DCDC命令
 148   1        OLED_WR_Byte(0X10,OLED_CMD);  //DCDC OFF
 149   1        OLED_WR_Byte(0XAE,OLED_CMD);  //DISPLAY OFF
 150   1      }            
 151          //清屏函数,清完屏,整个屏幕是黑色的!和没点亮一样!!!    
 152          void OLED_Clear(void)  
 153          {  
 154   1        u8 i,n;       
 155   1        for(i=0;i<8;i++)  
 156   1        {  
 157   2          OLED_WR_Byte (0xb0+i,OLED_CMD);    //设置页地址（0~7）
 158   2          OLED_WR_Byte (0x00,OLED_CMD);      //设置显示位置―列低地址
 159   2          OLED_WR_Byte (0x10,OLED_CMD);      //设置显示位置―列高地址   
 160   2          for(n=0;n<128;n++)OLED_WR_Byte(0,OLED_DATA); 
 161   2        } //更新显示
 162   1      }
 163          void OLED_On(void)  
 164          {  
 165   1        u8 i,n;       
 166   1        for(i=0;i<8;i++)  
 167   1        {  
 168   2          OLED_WR_Byte (0xb0+i,OLED_CMD);    //设置页地址（0~7）
 169   2          OLED_WR_Byte (0x00,OLED_CMD);      //设置显示位置―列低地址
 170   2          OLED_WR_Byte (0x10,OLED_CMD);      //设置显示位置―列高地址   
 171   2          for(n=0;n<128;n++)OLED_WR_Byte(1,OLED_DATA); 
 172   2        } //更新显示
 173   1      }
 174          //在指定位置显示一个字符,包括部分字符
 175          //x:0~127
 176          //y:0~63
 177          //mode:0,反白显示;1,正常显示         
 178          //size:选择字体 16/12 
C51 COMPILER V9.54   OLED                                                                  07/13/2022 15:06:09 PAGE 4   

 179          void OLED_ShowChar(u8 x,u8 y,u8 chr,u8 Char_Size)
 180          {       
 181   1        unsigned char c=0,i=0;  
 182   1          c=chr-' ';//得到偏移后的值      
 183   1          if(x>Max_Column-1){x=0;y=y+2;}
 184   1          if(Char_Size ==16)
 185   1            {
 186   2            OLED_Set_Pos(x,y);  
 187   2            for(i=0;i<8;i++)
 188   2            OLED_WR_Byte(F8X16[c*16+i],OLED_DATA);
 189   2            OLED_Set_Pos(x,y+1);
 190   2            for(i=0;i<8;i++)
 191   2            OLED_WR_Byte(F8X16[c*16+i+8],OLED_DATA);
 192   2            }
 193   1            else {  
 194   2              OLED_Set_Pos(x,y);
 195   2              for(i=0;i<6;i++)
 196   2              OLED_WR_Byte(F6x8[c][i],OLED_DATA);
 197   2              
 198   2            }
 199   1      }
 200          //m^n函数
 201          u32 oled_pow(u8 m,u8 n)
 202          {
 203   1        u32 result=1;  
 204   1        while(n--)result*=m;    
 205   1        return result;
 206   1      }         
 207          //显示2个数字
 208          //x,y :起点坐标  
 209          //len :数字的位数
 210          //size:字体大小
 211          //mode:模式 0,填充模式;1,叠加模式
 212          //num:数值(0~4294967295);       
 213          void OLED_ShowNum(u8 x,u8 y,u32 num,u8 len,u8 size2)
 214          {           
 215   1        u8 t,temp;
 216   1        u8 enshow=0;               
 217   1        for(t=0;t<len;t++)
 218   1        {
 219   2          temp=(num/oled_pow(10,len-t-1))%10;
 220   2          if(enshow==0&&t<(len-1))
 221   2          {
 222   3            if(temp==0)
 223   3            {
 224   4              OLED_ShowChar(x+(size2/2)*t,y,' ',size2);
 225   4              continue;
 226   4            }else enshow=1; 
 227   3             
 228   3          }
 229   2          OLED_ShowChar(x+(size2/2)*t,y,temp+'0',size2); 
 230   2        }
 231   1      } 
 232          //显示一个字符号串
 233          void OLED_ShowString(u8 x,u8 y,u8 *chr,u8 Char_Size)
 234          {
 235   1        unsigned char j=0;
 236   1        while (chr[j]!='\0')
 237   1        {   OLED_ShowChar(x,y,chr[j],Char_Size);
 238   2            x+=8;
 239   2          if(x>120){x=0;y+=2;}
 240   2            j++;
C51 COMPILER V9.54   OLED                                                                  07/13/2022 15:06:09 PAGE 5   

 241   2        }
 242   1      }
 243          //显示汉字
 244          void OLED_ShowCHinese(u8 x,u8 y,u8 no)
 245          {               
 246   1        u8 t,adder=0;
 247   1        OLED_Set_Pos(x,y);  
 248   1          for(t=0;t<16;t++)
 249   1          {
 250   2              OLED_WR_Byte(Hzk[2*no][t],OLED_DATA);
 251   2              adder+=1;
 252   2           }  
 253   1          OLED_Set_Pos(x,y+1);  
 254   1          for(t=0;t<16;t++)
 255   1            { 
 256   2              OLED_WR_Byte(Hzk[2*no+1][t],OLED_DATA);
 257   2              adder+=1;
 258   2            }         
 259   1      }
 260          /***********功能描述：显示显示BMP图片128×64起始点坐标(x,y),x的范围0～127，y为页的范围0～7****************
             -*/
 261          void OLED_DrawBMP(unsigned char x0, unsigned char y0,unsigned char x1, unsigned char y1,unsigned char BMP[
             -])
 262          {   
 263   1       unsigned int j=0;
 264   1       unsigned char x,y;
 265   1        
 266   1        if(y1%8==0) y=y1/8;      
 267   1        else y=y1/8+1;
 268   1        for(y=y0;y<y1;y++)
 269   1        {
 270   2          OLED_Set_Pos(x0,y);
 271   2          for(x=x0;x<x1;x++)
 272   2            {      
 273   3              OLED_WR_Byte(BMP[j++],OLED_DATA);       
 274   3            }
 275   2        }
 276   1      } 
 277           
 278          //初始化SSD1306             
 279          void OLED_Init(void)
 280          {   
 281   1       
 282   1        OLED_WR_Byte(0xAE,OLED_CMD);//--display off
 283   1        OLED_WR_Byte(0x00,OLED_CMD);//---set low column address
 284   1        OLED_WR_Byte(0x10,OLED_CMD);//---set high column address
 285   1        OLED_WR_Byte(0x40,OLED_CMD);//--set start line address  
 286   1        OLED_WR_Byte(0xB0,OLED_CMD);//--set page address
 287   1        OLED_WR_Byte(0x81,OLED_CMD); // contract control
 288   1        OLED_WR_Byte(0xFF,OLED_CMD);//--128   
 289   1        OLED_WR_Byte(0xA1,OLED_CMD);//set segment remap 
 290   1        OLED_WR_Byte(0xA6,OLED_CMD);//--normal / reverse
 291   1        OLED_WR_Byte(0xA8,OLED_CMD);//--set multiplex ratio(1 to 64)
 292   1        OLED_WR_Byte(0x3F,OLED_CMD);//--1/32 duty
 293   1        OLED_WR_Byte(0xC8,OLED_CMD);//Com scan direction
 294   1        OLED_WR_Byte(0xD3,OLED_CMD);//-set display offset
 295   1        OLED_WR_Byte(0x00,OLED_CMD);//
 296   1        
 297   1        OLED_WR_Byte(0xD5,OLED_CMD);//set osc division
 298   1        OLED_WR_Byte(0x80,OLED_CMD);//
 299   1        
 300   1        OLED_WR_Byte(0xD8,OLED_CMD);//set area color mode off
C51 COMPILER V9.54   OLED                                                                  07/13/2022 15:06:09 PAGE 6   

 301   1        OLED_WR_Byte(0x05,OLED_CMD);//
 302   1        
 303   1        OLED_WR_Byte(0xD9,OLED_CMD);//Set Pre-Charge Period
 304   1        OLED_WR_Byte(0xF1,OLED_CMD);//
 305   1        
 306   1        OLED_WR_Byte(0xDA,OLED_CMD);//set com pin configuartion
 307   1        OLED_WR_Byte(0x12,OLED_CMD);//
 308   1        
 309   1        OLED_WR_Byte(0xDB,OLED_CMD);//set Vcomh
 310   1        OLED_WR_Byte(0x30,OLED_CMD);//
 311   1        
 312   1        OLED_WR_Byte(0x8D,OLED_CMD);//set charge pump enable
 313   1        OLED_WR_Byte(0x14,OLED_CMD);//
 314   1        
 315   1        OLED_WR_Byte(0xAF,OLED_CMD);//--turn on oled panel
 316   1      }  
 317           


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1169    ----
   CONSTANT SIZE    =   3032    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      41
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
