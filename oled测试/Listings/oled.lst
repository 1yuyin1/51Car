C51 COMPILER V9.54   OLED                                                                  07/13/2022 14:47:59 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE OLED
OBJECT MODULE PLACED IN .\Objects\oled.obj
COMPILER INVOKED BY: E:\keil5\C51\BIN\C51.EXE oled.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\oled.l
                    -st) TABS(2) OBJECT(.\Objects\oled.obj)

line level    source

   1          
   2          #include "oled.h"
   3          #include "oledfront.h"    //取模的中文库 
   4                   
   5          void delay_ms(unsigned int ms)
   6          {                         
   7   1        unsigned int a;
   8   1        while(ms)
   9   1        {
  10   2          a=1800;
  11   2          while(a--);
  12   2          ms--;
  13   2        }
  14   1      }
  15          /**********************************************
  16          //IIC Start
  17          **********************************************/
  18          void IIC_Start()
  19          {
  20   1       
  21   1        OLED_SCLK_Set() ;
  22   1        OLED_SDIN_Set();
  23   1        OLED_SDIN_Clr();
  24   1        OLED_SCLK_Clr();
  25   1      }
  26           
  27          /**********************************************
  28          //IIC Stop
  29          **********************************************/
  30          void IIC_Stop()
  31          {
  32   1      OLED_SCLK_Set() ;
  33   1      //  OLED_SCLK_Clr();
  34   1        OLED_SDIN_Clr();
  35   1        OLED_SDIN_Set();
  36   1        
  37   1      }
  38           
  39          void IIC_Wait_Ack()
  40          {
  41   1       
  42   1        //GPIOB->CRH &= 0XFFF0FFFF; //设置PB12为上拉输入模式
  43   1        //GPIOB->CRH |= 0x00080000;
  44   1      //  OLED_SDA = 1;
  45   1      //  delay_us(1);
  46   1        //OLED_SCL = 1;
  47   1        //delay_us(50000);
  48   1      /*  while(1)
  49   1        {
  50   1          if(!OLED_SDA)       //判断是否接收到OLED 应答信号
  51   1          {
  52   1            //GPIOB->CRH &= 0XFFF0FFFF; //设置PB12为通用推免输出模式
  53   1            //GPIOB->CRH |= 0x00030000;
  54   1            return;
C51 COMPILER V9.54   OLED                                                                  07/13/2022 14:47:59 PAGE 2   

  55   1          }
  56   1        }
  57   1      */
  58   1        OLED_SCLK_Set() ;
  59   1        OLED_SCLK_Clr();
  60   1      }
  61          /**********************************************
  62          // IIC Write byte
  63          **********************************************/
  64           
  65          void Write_IIC_Byte(unsigned char IIC_Byte)
  66          {
  67   1        unsigned char i;
  68   1        unsigned char m,da;
  69   1        da=IIC_Byte;
  70   1        OLED_SCLK_Clr();
  71   1        for(i=0;i<8;i++)    
  72   1        {
  73   2            m=da;
  74   2          //  OLED_SCLK_Clr();
  75   2          m=m&0x80;
  76   2          if(m==0x80)
  77   2          {OLED_SDIN_Set();}
  78   2          else OLED_SDIN_Clr();
  79   2            da=da<<1;
  80   2          OLED_SCLK_Set();
  81   2          OLED_SCLK_Clr();
  82   2          }
  83   1      }
  84          /**********************************************
  85          // IIC Write Command
  86          **********************************************/
  87          void Write_IIC_Command(unsigned char IIC_Command)
  88          {
  89   1         IIC_Start();
  90   1         Write_IIC_Byte(0x78);            //Slave address,SA0=0
  91   1        IIC_Wait_Ack(); 
  92   1         Write_IIC_Byte(0x00);      //write command
  93   1        IIC_Wait_Ack(); 
  94   1         Write_IIC_Byte(IIC_Command); 
  95   1        IIC_Wait_Ack(); 
  96   1         IIC_Stop();
  97   1      }
  98          /**********************************************
  99          // IIC Write Data
 100          **********************************************/
 101          void Write_IIC_Data(unsigned char IIC_Data)
 102          {
 103   1         IIC_Start();
 104   1         Write_IIC_Byte(0x78);      //D/C#=0; R/W#=0
 105   1        IIC_Wait_Ack(); 
 106   1         Write_IIC_Byte(0x40);      //write data
 107   1        IIC_Wait_Ack(); 
 108   1         Write_IIC_Byte(IIC_Data);
 109   1        IIC_Wait_Ack(); 
 110   1         IIC_Stop();
 111   1      }
 112          void OLED_WR_Byte(unsigned dat,unsigned cmd)
 113          {
 114   1        if(cmd)
 115   1        {
 116   2            Write_IIC_Data(dat);
C51 COMPILER V9.54   OLED                                                                  07/13/2022 14:47:59 PAGE 3   

 117   2        }
 118   1        else 
 119   1          {
 120   2            Write_IIC_Command(dat); 
 121   2          }
 122   1      }
 123           
 124          /********************************************
 125          // fill_Picture
 126          ********************************************/
 127          void fill_picture(unsigned char fill_Data)
 128          {
 129   1        unsigned char m,n;
 130   1        for(m=0;m<8;m++)
 131   1        {
 132   2          OLED_WR_Byte(0xb0+m,0);   //page0-page1
 133   2          OLED_WR_Byte(0x00,0);   //low column start address
 134   2          OLED_WR_Byte(0x10,0);   //high column start address
 135   2          for(n=0;n<128;n++)
 136   2            {
 137   3              OLED_WR_Byte(fill_Data,1);
 138   3            }
 139   2        }
 140   1      }
 141           
 142           
 143          /***********************Delay****************************************/
 144          void Delay_50ms(unsigned int Del_50ms)
 145          {
 146   1        unsigned int m;
 147   1        for(;Del_50ms>0;Del_50ms--)
 148   1          for(m=6245;m>0;m--);
 149   1      }
 150           
 151          void Delay_1ms(unsigned int Del_1ms)
 152          {
 153   1        unsigned char j;
 154   1        while(Del_1ms--)
 155   1        { 
 156   2          for(j=0;j<123;j++);
 157   2        }
 158   1      }
 159           
 160          //坐标设置
 161           
 162          void OLED_Set_Pos(unsigned char x, unsigned char y) 
 163          {   OLED_WR_Byte(0xb0+y,OLED_CMD);
 164   1        OLED_WR_Byte(((x&0xf0)>>4)|0x10,OLED_CMD);
 165   1        OLED_WR_Byte((x&0x0f),OLED_CMD); 
 166   1      }       
 167          //开启OLED显示    
 168          void OLED_Display_On(void)
 169          {
 170   1        OLED_WR_Byte(0X8D,OLED_CMD);  //SET DCDC命令
 171   1        OLED_WR_Byte(0X14,OLED_CMD);  //DCDC ON
 172   1        OLED_WR_Byte(0XAF,OLED_CMD);  //DISPLAY ON
 173   1      }
 174          //关闭OLED显示     
 175          void OLED_Display_Off(void)
 176          {
 177   1        OLED_WR_Byte(0X8D,OLED_CMD);  //SET DCDC命令
 178   1        OLED_WR_Byte(0X10,OLED_CMD);  //DCDC OFF
C51 COMPILER V9.54   OLED                                                                  07/13/2022 14:47:59 PAGE 4   

 179   1        OLED_WR_Byte(0XAE,OLED_CMD);  //DISPLAY OFF
 180   1      }            
 181          //清屏函数,清完屏,整个屏幕是黑色的!和没点亮一样!!!    
 182          void OLED_Clear(void)  
 183          {  
 184   1        u8 i,n;       
 185   1        for(i=0;i<8;i++)  
 186   1        {  
 187   2          OLED_WR_Byte (0xb0+i,OLED_CMD);    //设置页地址（0~7）
 188   2          OLED_WR_Byte (0x00,OLED_CMD);      //设置显示位置―列低地址
 189   2          OLED_WR_Byte (0x10,OLED_CMD);      //设置显示位置―列高地址   
 190   2          for(n=0;n<128;n++)OLED_WR_Byte(0,OLED_DATA); 
 191   2        } //更新显示
 192   1      }
 193          void OLED_On(void)  
 194          {  
 195   1        u8 i,n;       
 196   1        for(i=0;i<8;i++)  
 197   1        {  
 198   2          OLED_WR_Byte (0xb0+i,OLED_CMD);    //设置页地址（0~7）
 199   2          OLED_WR_Byte (0x00,OLED_CMD);      //设置显示位置―列低地址
 200   2          OLED_WR_Byte (0x10,OLED_CMD);      //设置显示位置―列高地址   
 201   2          for(n=0;n<128;n++)OLED_WR_Byte(1,OLED_DATA); 
 202   2        } //更新显示
 203   1      }
 204          //在指定位置显示一个字符,包括部分字符
 205          //x:0~127
 206          //y:0~63
 207          //mode:0,反白显示;1,正常显示         
 208          //size:选择字体 16/12 
 209          void OLED_ShowChar(u8 x,u8 y,u8 chr,u8 Char_Size)
 210          {       
 211   1        unsigned char c=0,i=0;  
 212   1          c=chr-' ';//得到偏移后的值      
 213   1          if(x>Max_Column-1){x=0;y=y+2;}
 214   1          if(Char_Size ==16)
 215   1            {
 216   2            OLED_Set_Pos(x,y);  
 217   2            for(i=0;i<8;i++)
 218   2            OLED_WR_Byte(F8X16[c*16+i],OLED_DATA);
 219   2            OLED_Set_Pos(x,y+1);
 220   2            for(i=0;i<8;i++)
 221   2            OLED_WR_Byte(F8X16[c*16+i+8],OLED_DATA);
 222   2            }
 223   1            else {  
 224   2              OLED_Set_Pos(x,y);
 225   2              for(i=0;i<6;i++)
 226   2              OLED_WR_Byte(F6x8[c][i],OLED_DATA);
 227   2              
 228   2            }
 229   1      }
 230          //m^n函数
 231          u32 oled_pow(u8 m,u8 n)
 232          {
 233   1        u32 result=1;  
 234   1        while(n--)result*=m;    
 235   1        return result;
 236   1      }         
 237          //显示2个数字
 238          //x,y :起点坐标  
 239          //len :数字的位数
 240          //size:字体大小
C51 COMPILER V9.54   OLED                                                                  07/13/2022 14:47:59 PAGE 5   

 241          //mode:模式 0,填充模式;1,叠加模式
 242          //num:数值(0~4294967295);       
 243          void OLED_ShowNum(u8 x,u8 y,u32 num,u8 len,u8 size2)
 244          {           
 245   1        u8 t,temp;
 246   1        u8 enshow=0;               
 247   1        for(t=0;t<len;t++)
 248   1        {
 249   2          temp=(num/oled_pow(10,len-t-1))%10;
 250   2          if(enshow==0&&t<(len-1))
 251   2          {
 252   3            if(temp==0)
 253   3            {
 254   4              OLED_ShowChar(x+(size2/2)*t,y,' ',size2);
 255   4              continue;
 256   4            }else enshow=1; 
 257   3             
 258   3          }
 259   2          OLED_ShowChar(x+(size2/2)*t,y,temp+'0',size2); 
 260   2        }
 261   1      } 
 262          //显示一个字符号串
 263          void OLED_ShowString(u8 x,u8 y,u8 *chr,u8 Char_Size)
 264          {
 265   1        unsigned char j=0;
 266   1        while (chr[j]!='\0')
 267   1        {   OLED_ShowChar(x,y,chr[j],Char_Size);
 268   2            x+=8;
 269   2          if(x>120){x=0;y+=2;}
 270   2            j++;
 271   2        }
 272   1      }
 273          //显示汉字
 274          void OLED_ShowCHinese(u8 x,u8 y,u8 no)
 275          {               
 276   1        u8 t,adder=0;
 277   1        OLED_Set_Pos(x,y);  
 278   1          for(t=0;t<14;t++)
 279   1          {
 280   2              OLED_WR_Byte(Hzk[2*no][t],OLED_DATA);
 281   2              adder+=1;
 282   2           }  
 283   1          OLED_Set_Pos(x,y+1);  
 284   1          for(t=0;t<14;t++)
 285   1            { 
 286   2              OLED_WR_Byte(Hzk[2*no+1][t],OLED_DATA);
 287   2              adder+=1;
 288   2            }         
 289   1      }
 290          /***********功能描述：显示显示BMP图片128×64起始点坐标(x,y),x的范围0～127，y为页的范围0～7****************
             -*/
 291          void OLED_DrawBMP(unsigned char x0, unsigned char y0,unsigned char x1, unsigned char y1,unsigned char BMP[
             -])
 292          {   
 293   1       unsigned int j=0;
 294   1       unsigned char x,y;
 295   1        
 296   1        if(y1%8==0) y=y1/8;      
 297   1        else y=y1/8+1;
 298   1        for(y=y0;y<y1;y++)
 299   1        {
 300   2          OLED_Set_Pos(x0,y);
C51 COMPILER V9.54   OLED                                                                  07/13/2022 14:47:59 PAGE 6   

 301   2          for(x=x0;x<x1;x++)
 302   2            {      
 303   3              OLED_WR_Byte(BMP[j++],OLED_DATA);       
 304   3            }
 305   2        }
 306   1      } 
 307           
 308          //初始化SSD1306             
 309          void OLED_Init(void)
 310          {   
 311   1       
 312   1        OLED_WR_Byte(0xAE,OLED_CMD);//--display off
 313   1        OLED_WR_Byte(0x00,OLED_CMD);//---set low column address
 314   1        OLED_WR_Byte(0x10,OLED_CMD);//---set high column address
 315   1        OLED_WR_Byte(0x40,OLED_CMD);//--set start line address  
 316   1        OLED_WR_Byte(0xB0,OLED_CMD);//--set page address
 317   1        OLED_WR_Byte(0x81,OLED_CMD); // contract control
 318   1        OLED_WR_Byte(0xFF,OLED_CMD);//--128   
 319   1        OLED_WR_Byte(0xA1,OLED_CMD);//set segment remap 
 320   1        OLED_WR_Byte(0xA6,OLED_CMD);//--normal / reverse
 321   1        OLED_WR_Byte(0xA8,OLED_CMD);//--set multiplex ratio(1 to 64)
 322   1        OLED_WR_Byte(0x3F,OLED_CMD);//--1/32 duty
 323   1        OLED_WR_Byte(0xC8,OLED_CMD);//Com scan direction
 324   1        OLED_WR_Byte(0xD3,OLED_CMD);//-set display offset
 325   1        OLED_WR_Byte(0x00,OLED_CMD);//
 326   1        
 327   1        OLED_WR_Byte(0xD5,OLED_CMD);//set osc division
 328   1        OLED_WR_Byte(0x80,OLED_CMD);//
 329   1        
 330   1        OLED_WR_Byte(0xD8,OLED_CMD);//set area color mode off
 331   1        OLED_WR_Byte(0x05,OLED_CMD);//
 332   1        
 333   1        OLED_WR_Byte(0xD9,OLED_CMD);//Set Pre-Charge Period
 334   1        OLED_WR_Byte(0xF1,OLED_CMD);//
 335   1        
 336   1        OLED_WR_Byte(0xDA,OLED_CMD);//set com pin configuartion
 337   1        OLED_WR_Byte(0x12,OLED_CMD);//
 338   1        
 339   1        OLED_WR_Byte(0xDB,OLED_CMD);//set Vcomh
 340   1        OLED_WR_Byte(0x30,OLED_CMD);//
 341   1        
 342   1        OLED_WR_Byte(0x8D,OLED_CMD);//set charge pump enable
 343   1        OLED_WR_Byte(0x14,OLED_CMD);//
 344   1        
 345   1        OLED_WR_Byte(0xAF,OLED_CMD);//--turn on oled panel
 346   1      }  
 347           


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1247    ----
   CONSTANT SIZE    =   3032    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      41
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
